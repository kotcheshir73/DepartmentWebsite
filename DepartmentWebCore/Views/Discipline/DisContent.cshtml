@model WebInterfaces.ViewModels.WebProcessDisciplineForDownloadViewModel
@{
    ViewBag.Title = "DisContent";
}

<h2 class="page-header">
    @Model.Name
</h2>
<h5>@Model.Description</h5>
@if (User.IsInRole("Преподаватель") && Model.LecturerName.Contains(User.Identity.Name))
{
    <div class="btn btn-default">
        @Html.ActionLink("Добавить файлы", "LoadFile", new { Model.Name }, new { @style = "color: #333333 !important ; text-decoration: none !important ;" })
    </div>
}


<div class="text-lec">
    Преподаватели: @Model.LecturerName<p></p>
    @if (User.IsInRole("Преподаватель") || User.IsInRole("Студент"))
    {
        @foreach (var sem in Model.Semestrs)
        {
            <input class="hide" id=@sem.Name type="checkbox">
            <label for=@sem.Name>@sem.Name семестр</label>
            @:<div>
                foreach (var tn in sem.TimeNorms)
                {
                    <input class="hide" id=@(sem.Name + tn.Name) type="checkbox">
                    <label for=@(sem.Name + tn.Name)>@tn.Name</label>
                    @:<div>
                        foreach (var file in tn.Files)
                        {

                            if (file.Name.Contains(".pdf"))
                            {
                                <a href="@Url.Action("PDF", new { path = file.Path, fileName = file.Name })" target="_blank">@file.Name</a>
                            }
                            else
                            {
                                <a href="@Url.Action("Download", new { path = file.Path, fileName = file.Name })">@file.Name</a>
                            }
                            @if (User.IsInRole("Преподаватель") && Model.LecturerName.Contains(User.Identity.Name))
                            {
                                <a href="@Url.Action("DeleteFile", new { path = file.Path })">Удалить </a>
                            }<br />
                        }
                    @:</div>
                    <br />
                }
            @:</div>
            <br />
        }

        //zdes comment iz event






    }
    else
    {
        @:У вас нет доступа к этой странице.
    }


    
</div>
@if (User.IsInRole("Преподаватель") || User.IsInRole("Студент"))
{
    @await Html.PartialAsync("~/Views/Comment/AddComment.cshtml", new WebInterfaces.BindingModels.CommentSetBindingModel { DisciplineId = Model.DisciplineId })
}

@if (Model.Comments.Count != 0)
{
    @foreach (var com in Model.Comments)
    {
        @com.DepartmentUser @com.Date<br />
        @com.Content <br />
        @if (User.Identity.Name != null && com.DepartmentUser.Contains(User.Identity.Name))
        {
            <a href="@Url.Action("DeleteCommentDiscipline", "Comment", new { id = com.Id, disciplineName = Model.Name })"> Удалить </a>
        }
        @if (User.IsInRole("Преподаватель") || User.IsInRole("Студент"))
        {
            @await Html.PartialAsync("~/Views/Comment/AddComment.cshtml", new WebInterfaces.BindingModels.CommentSetBindingModel { DisciplineId = Model.DisciplineId, ParentId = com.Id })
        }
        @if (com.commentList.Count != 0)
        {
            @foreach (var comChild in com.commentList)
            {
                @:Ответ на комметарий @com.DepartmentUser от @comChild.DepartmentUser @comChild.Date <br />
                @comChild.Content
                @if (User.Identity.Name != null && comChild.DepartmentUser.Contains(User.Identity.Name))
                {
                    <a href="@Url.Action("DeleteCommentDiscipline", "Comment", new { id = com.Id, disciplineName = Model.Name })"> Удалить </a>
                }
                <br />
            }
        }
    }
}